<form id="add-to-cart-form">
  <template v-for="(option, optionIndex) in form.options" :key="option.name">
    <div>{% render 'product-select-option' %}</div>
  </template>
  <button @click="addToCart" name="add" id="add-to-cart-button">
    Add to cart
  </button>
</form>

<script>
  if (document.querySelector("#add-to-cart-form")) {
    const productForm = Vue.createApp({
      delimiters: ["${", "}"],
      data(event) {
        return {
          variantId: "",
          variantsMap: {}, //map variant title to variant id
          selected: {},
          form: {
            selections: {},
            options: [],
          },
          open: false,
        };
      },
      created() {
        this.getProductData().then((data) => {
          //map option to variant id
          data.variants.map(
            (variant) => (this.variantsMap[variant.title] = variant.id)
          );
          //map product options to form
          this.form.options = data.options.map((option) => ({
            ...option,
            visible: false,
          }));
          //set default selection for select element and form (max three options by default for Shopify)
          data.options.map(
            (option) => (this.selected[option.name] = option.values[0])
          );
          this.form.selections = { ...this.selected };
          console.log(this.form);
        });
      },
      methods: {
        async addToCart(event) {
          event.preventDefault();

          //generate the variant title for lookup in the variantsMap
          const variantTitle = Object.values(this.form.selections).reduce(
            (acc, selection) => acc + " / " + selection
          );

          const variantId = this.variantsMap[variantTitle];

          const data = {
            id: variantId,
            quantity: 1,
          };

          try {
            const response = await fetch("/cart/add.js", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify(data),
            });
            console.log(await response.json());
          } catch (err) {
            console.log(err);
          }
        },
        async getProductData() {
          try {
            const response = await fetch("/products/{{ product.handle }}.js");
            const data = await response.json();
            return data;
          } catch (err) {
            console.log(err);
          }
        },
        toggleOptionsList(option) {
          option.visible = !option.visible;
        },
        updateSelections(option, value) {
          this.selected[option.name] = value;
          this.form.selections[option.name] = value;
          option.visible = false;
        },
      },
    }).mount("#add-to-cart-form");
  }
</script>
