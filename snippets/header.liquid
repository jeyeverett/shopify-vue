{% comment %} 

  {% for link in linklists.main-menu.links %} 
    {% assign child_list_handle = link.title | handleize %} 
      {% if linklists[child_list_handle].links != blank %}
        <a href="{{ link.url }}">{{ link.title }}</a>
        [{% for childlink in linklists[child_list_handle].links %}
            <a href="{{ childlink.url }}">{{ childlink.title | escape }}</a>
        {% endfor %}] {% else %}
        <a href="{{ link.url }}">{{ link.title }}</a>
      {% endif %} 
  {% endfor %} 
  
{% if shop.customer_accounts_enabled %} 
  {% if customer %}
    <a href="/account">account</a>
    {{ "log out" | customer_logout_link }}
  {% else %}
    {{ "log in " | customer_login_link }}
    {{ "register" | customer_register_link }}
  {% endif %} 
{% endif %} 

{% endcomment %}


<header class="z-10 fixed inset-0 py-5 mx-10 border-b border-gray-500 bg-white select-none" style="height: min-content" id="header">
    <nav class="flex justify-between items-center">
        {% unless template == 'product' %}
          <button class="relative menu-button" @click="toggleMenu">
            Menu
          </button>
        {% else %}
          <a href="javascript:history.back()">Back</a>
        {% endunless %}
    
        <a href="/">{{ shop.name }}</a>

        <button class="w-8 h-8 relative transition-all" title="shopping cart" id="cart-button" @click="toggleCart">
          {{ 'shopping-cart.png' | asset_url | img_tag: 'Shopping Cart', 'cart-icon' }}
          <span class="text-xs text-gray-900 font-semibold absolute top-2 left-4 cart-count">${cartCount || ""}</span>
        </button>
    </nav>

    <transition name="cart">
      <section v-show="isCartVisible" class="absolute top-20 right-0 w-96 z-20 bg-white border border-gray-700 px-6 py-3 shadow-2xl" style="height: 88.5vh;">
        <h1 class=" text-md font-semibold my-2">Cart</h1>
        {% render 'cart-modal' %}
      </section>
    </transition>

    <transition name="menu">
      <nav v-show="isMenuVisible" class="absolute top-20 left-0 w-52 z-20 bg-white border border-gray-700 px-6 py-3 shadow-2xl" style="height: 88.5vh;">
        {% render 'menu-modal' %}
      </nav>
    </transition>

    <div class="w-full h-full fixed top-0 left-0 z-0" v-show="isCartVisible || isMenuVisible" @click="closeAllMenu" style="z-index: -10;"></div>
</header>

<script>
  if (document.querySelector('#header')) {
    const header = Vue.createApp({
      delimiters: ["${", "}"],
      data() {
        return {

        }
      },
      created() {
        store.getCart();
      },
      computed: {
        cart() {
          return store.state.cart.items;
        },
        cartCount() {
          return this.cart.item_count;
        },
        isCartVisible() {
          return !store.state.cart.hidden;
        },
        isMenuVisible() {
          return !store.state.menu.hidden;
        }
      },
      methods: {
        toggleCart() {
          store.toggleCart();
        },
        toggleMenu() {
          console.log('menu toggled');
          store.toggleMenu();
        },
        async incItem(item) {
          const data = {
            "id": item.key,
            quantity: item.quantity + 1
          }

          try {
            await fetch('/cart/change.js', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify(data)
            });
  
            store.getCart();
          } catch (err) {
            console.log(err);
          }
        },
        async decItem(item) {
          const data = {
            "id": item.key,
            quantity: item.quantity > 1 ? item.quantity - 1 : 0
          }

          try {
            await fetch('/cart/change.js', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify(data)
            });
  
            store.getCart();
          } catch (err) {
            console.log(err);
          }
        },
        toPrice(price) {
          return "$" + (price / 100).toFixed(2);
        },
        closeAllMenu() {
          store.closeAll();
        }
      }
    }).mount('#header');
  }
</script>

<style scoped>
  /* -------CART------- */
  .cart-icon {
    opacity: 0.75;
  }
  
  .cart-count {
    transition: all .2s;
    opacity: 0;
  }

  #cart-button:hover .cart-count {
    transform: translateY(-16px);
    opacity: 1;
  }

  #cart-button::after {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-46%, -56%) scale(0);
    opacity: 0;
  }

  #cart-button:hover::after {
    content: "";
    height: 3.25rem;
    width: 3.25rem;
    border-radius: 50%;
    display: inline-block;
    animation: cart-icon-hover .2s forwards;
  }

  @keyframes cart-icon-hover {
    100% {
      background-color: rgba(55, 65, 81, .1);
      box-shadow: inset 0 0 8px rgba(55, 65, 81, .25);
      transform: translate(-46%, -56%) scale(1);
      opacity: 1;
    }
  }

  .cart-enter-active {
    animation: cart-modal-animate 0.3s ease-in forwards;
  }

  .cart-leave-active {
    animation: cart-modal-animate 0.3s ease-out reverse;
  }

  @keyframes cart-modal-animate {
    from {
      right: -24rem
    }
    to {
      right: 0;
    }
  }

  .quantity-selector {
    line-height: 0.875rem; 
    padding-top: 0.125rem;
  }

  
  .quantity-btn::after {
    position: absolute;
    top: -2px;
    left: -55%;
    transform: scale(0);
    opacity: 0;
  }

  .quantity-selector:last-child::after {
    left: -40.5%;
  }

  .quantity-btn:hover::after {
    content: "";
    height: 20px;
    width: 20px;
    border-radius: 50%;
    display: inline-block;
    animation: quantity-icon-hover .2s forwards;
  }

  @keyframes quantity-icon-hover {
    100% {
      background-color: rgba(55, 65, 81, .1);
      box-shadow: inset 0 0 8px rgba(55, 65, 81, .25);
      transform: scale(1);
      opacity: 1;
    }
  }

  /* -------MENU------- */

  .menu-button::after {
    position: absolute;
    top: 56%;
    left: 47%;
    transform: translate(-46%, -56%) scale(0);
    opacity: 0;
  }

  .menu-button:hover::after {
    content: "";
    height: 2rem;
    width: 5rem;
    border-radius: 2rem;
    display: inline-block;
    animation: menu-hover .2s forwards;
  }

  @keyframes menu-hover {
    100% {
      background-color: rgba(55, 65, 81, .1);
      box-shadow: inset 0 0 8px rgba(55, 65, 81, .25);
      transform: translate(-46%, -56%) scale(1);
      opacity: 1;
    }
  }

  .menu-enter-active {
    animation: menu-modal-animate 0.3s ease-in forwards;
  }

  .menu-leave-active {
    animation: menu-modal-animate 0.3s ease-out reverse;
  }

  @keyframes menu-modal-animate {
    from {
      left: -13rem;
    }
    to {
      left: 0;
    }
  }

</style>