<form id="product-form">
  <ul
    v-for="(option, optionIndex) in form.options"
    :key="option.name"
    :class="['my-2 w-full px-4 py-2 border border-gray-700 bg-white hover:bg-gray-200 transition-colors cursor-pointer relative', { 'bg-gray-200': option.visible }]"
  >
    {% render 'product-select-option' %}
  </ul>
  <button
    @click="addToCart"
    name="add"
    id="add-to-cart-button"
    class="
      w-full
      px-4
      py-2
      text-white
      bg-gray-700
      border border-gray-700
      hover:bg-white hover:text-gray-700
      transition-colors
    "
  >
    Add to cart
  </button>
</form>
<script>
  if (document.querySelector("#product-form")) {
    const productForm = Vue.createApp({
      delimiters: ["${", "}"],
      data() {
        return {
          variantsMap: {}, //map variant title to variant id
          form: {
            options: [],
            selected: {},
          },
        };
      },
      created() {
        store.getProductData("{{ product.handle }}").then((data) => {
          //map option to variant id
          data.variants.map(
            (variant) => (this.variantsMap[variant.title] = variant.id)
          );
          //map product options to form
          data.options.forEach((option) => {
            this.form.options.push({
              ...option,
              visible: false,
            });
            // sets the default selected option for each option
            this.form.selected[option.name] = option.values[0];
          });
        });
      },
      computed: {
        variantId() {
          //generate the variant title for lookup in the variantsMap
          const variantTitle = Object.values(this.form.selected).reduce(
            (acc, selection) => acc + " / " + selection
          );
          return this.variantsMap[variantTitle];
        },
      },
      methods: {
        async addToCart(event) {
          event.preventDefault();

          const data = {
            id: this.variantId,
            quantity: 1,
          };

          store.addToCart(data);
        },
        toggleOptionsList(option) {
          option.visible = !option.visible;
        },
        updateSelected(option, value) {
          this.form.selected[option.name] = value;
          option.visible = false;
        },
      },
    }).mount("#add-to-cart-form");
  }
</script>
